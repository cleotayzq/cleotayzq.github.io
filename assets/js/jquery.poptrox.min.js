/* jquery.poptrox.js v2.5.2-dev | (c) @ajlkn | github.com/ajlkn/jquery.poptrox | MIT licensed */
(function ($) {
    $.fn.poptrox_disableSelection = function () {
        return $(this)
            .css("user-select", "none")
            .css("-khtml-user-select", "none")
            .css("-moz-user-select", "none")
            .css("-o-user-select", "none")
            .css("-webkit-user-select", "none");
    };
    
    $.fn.poptrox = function (options) {
        if (this.length === 0) return $(this);
        if (this.length > 1) {
            for (var i = 0; i < this.length; i++) $(this[i]).poptrox(options);
            return $(this);
        }

        var settings = $.extend({
            preload: false,
            baseZIndex: 1000,
            fadeSpeed: 300,
            overlayColor: "#000000",
            overlayOpacity: 0.6,
            overlayClass: "poptrox-overlay",
            windowMargin: 50,
            windowHeightPad: 0,
            selector: "a",
            caption: null,
            parent: "body",
            popupSpeed: 300,
            popupWidth: 200,
            popupHeight: 100,
            popupIsFixed: false,
            useBodyOverflow: false,
            usePopupEasyClose: true,
            usePopupForceClose: false,
            usePopupLoader: true,
            usePopupCloser: true,
            usePopupCaption: false,
            usePopupNav: false,
            usePopupDefaultStyling: true,
            popupBackgroundColor: "#FFFFFF",
            popupTextColor: "#000000",
            popupLoaderTextSize: "2em",
            popupCloserBackgroundColor: "#000000",
            popupCloserTextColor: "#FFFFFF",
            popupCloserTextSize: "20px",
            popupPadding: 10,
            popupCaptionHeight: 60,
            popupCaptionTextSize: null,
            popupBlankCaptionText: "(untitled)",
            popupCloserText: "&#215;",
            popupLoaderText: "&bull;&bull;&bull;&bull;",
            popupClass: "poptrox-popup",
            popupSelector: null,
            popupLoaderSelector: ".loader",
            popupCloserSelector: ".closer",
            popupCaptionSelector: ".caption",
            popupNavPreviousSelector: ".nav-previous",
            popupNavNextSelector: ".nav-next",
            onPopupClose: null,
            onPopupOpen: null
        }, options);

        var $window = $(window),
            $body = $("body"),
            $overlay = $('<div class="' + settings.overlayClass + '"></div>'),
            items = [],
            currentIndex = 0,
            isOpen = false;

        var updateDimensions = function () {
            var windowWidth = $window.width(),
                windowHeight = $window.height() + settings.windowHeightPad,
                extraWidth = Math.abs($popup.width() - $popup.outerWidth()),
                extraHeight = Math.abs($popup.height() - $popup.outerHeight()),
                maxWidth = windowWidth - 2 * settings.windowMargin - extraWidth,
                maxHeight = windowHeight - 2 * settings.windowMargin - extraHeight;

            $popup.css("min-width", settings.popupWidth).css("min-height", settings.popupHeight);
            $content.children().css("max-width", maxWidth).css("max-height", maxHeight);
        };

        var $popup = $(settings.popupSelector ? settings.popupSelector :
            '<div class="' + settings.popupClass + '">' +
                (settings.popupLoaderSelector ? '<div class="loader">' + settings.popupLoaderText + '</div>' : '') +
                '<div class="pic"></div>' +
                (settings.popupCaptionSelector ? '<div class="caption"></div>' : '') +
                (settings.popupCloserSelector ? '<span class="closer">' + settings.popupCloserText + '</span>' : '') +
                (settings.popupNavPreviousSelector ? '<div class="nav-previous"></div>' : '') +
                (settings.popupNavNextSelector ? '<div class="nav-next"></div>' : '') +
            '</div>');

        var $content = $popup.find(".pic"),
            $loader = $popup.find(settings.popupLoaderSelector),
            $caption = $popup.find(settings.popupCaptionSelector),
            $closer = $popup.find(settings.popupCloserSelector),
            $next = $popup.find(settings.popupNavNextSelector),
            $previous = $popup.find(settings.popupNavPreviousSelector),
            $nav = $next.add($previous);

        // Apply default styles
        if (settings.usePopupDefaultStyling) {
            $popup.css("background", settings.popupBackgroundColor)
                .css("color", settings.popupTextColor)
                .css("padding", settings.popupPadding + "px");
        }

        $window.on("resize orientationchange", function () {
            updateDimensions();
        });

        $closer.on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            $popup.trigger("poptrox_close");
        });

        $overlay.on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            $popup.trigger("poptrox_close");
        });

        $popup.on("poptrox_close", function () {
            if (!isOpen) return;
            isOpen = false;
            $popup.hide();
            $overlay.fadeOut(settings.fadeSpeed, function () {
                if (settings.useBodyOverflow) $body.css("overflow", "auto");
            });
        });

        return this.each(function (index) {
            var $link = $(this);

            if (!$link.attr("href")) return;
            var item = { src: $link.attr("href"), captionText: $link.find("img").attr("title") };
            items.push(item);
            $link.removeAttr("title").removeAttr("href").css("cursor", "pointer").on("click", function (e) {
                e.preventDefault();
                e.stopPropagation();
                $popup.trigger("poptrox_open", [index]);
            });
        });
    };
})(jQuery);
